Database Schema Specification
This document lists the schema and purpose of all the
collections used/shared across all versions of Meteoric Daisy

Note that each document will have its own _id by default.

Meteor.user
	added via useraccounts:core (i.e. useraccounts:ionic)
	see https://github.com/meteor-useraccounts/core/blob/master/Guide.md
	for full documentation

	There are two types of users: patients and staff.
	Both types of accounts share the following fields.
		email:
			a string containing the user email
	
	**Note that these two are not separate fields in the document, but are contained
	in the Meteor-supplied "profile" object.
		name:
			a space separated string of form "<first name> <last name>"
		
		phone #:
			a string of form xxx-xxx-xxxx, where each x is a digit from 0 to 9.

	Patient documents additionally contain:
		medical record #
		exam #
		birth

appointments
	contains detailed information for each appointment
	Document Format :
		user_id : the userId of the user who has this appointment
		proc_type : 
			a string representing the type of procedure. 
			Current range of values: ["Lobotomy", "CT"]
		date :
			the appointment's scheduled date
		location:
			a string indicating the appointment site
		organization:
			a string indicating the responsible organization
		department:
			a string indicating the relevant department of said responsible organization
		ordering_physician:
			the Mongo assigned _id of the staff account who ordered this appointment.
		reason:
			a string indicating why the appointment was ordered
		last_checked:
			Javascript Date timestamp indicating when all obligations have been last viewed
			by medical staff. see entry under "preparations".

medicalInfo
	contains descriptions of medical procedures 
	Document Format:
		proc_type : 
			contains the type of procedure
			takes on one of the following values:
		text :
			contains textual description
			NOTE: all text is escaped and rendered as is

preparations
	contains preparation requirements for each appointment
	Document Format:
		appointment_id : 
			the Mongo assigned _id of the appointment under which this preparation is grouped
		completed: 
			a boolean indicating whether the patient has fulfilled this requirement, either "true", "false"
		text: 
			the requirement, in text
		date_by: 
			the day this requirement is filed under, represented by a Javascript date object
		last_updated:
			a Javascript Date timestamp indicating when this obligation was last updated by the user.
			is initialized to date of creation.
		last_checked:
			a Javascript Date timestamp indicating when this obligation was last viewed by medical staff.
			**[PROPOSED/CURRENTLY IMPLEMENTED CHANGE]
			since all obligations share the same last_checked timestamp, i.e. they're all "viewed" when
			staff read an appointment_detail page, this field should be stored in an appointment 
			document.

